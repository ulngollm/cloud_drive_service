openapi: 3.0.3
info:
  title: Storage service
  description: Gateway API для работы с внешними хранилищами
  version: 1.0.2
servers:
  - url: 'https://localhost:8000/api/v1/'
    description: dev url
tags:
  - name: info
    description: Информация о сервисе
  - name: manage
    description: Управление дисками
  - name: nav
    description: Навигация по файлам
  - name: auth
    description: Аутентификация
paths:
  /storages/types/:
    get:
      tags:
        - info
      summary: Список драйверов
      responses:
        200:
          description: Список доступных типов хранилищ

  /storages/:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - nav
        - manage
      summary: Список хранилищ пользователя
      responses:
        200:
          description: Список хранилищ авторизованного пользователя
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - manage
      summary: Добавить хранилище
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStorage'
            examples:
              yandex:
                $ref: '#/components/examples/yandex'

      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: id хранилища
                    example: 1

  /storages/{id}/:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - manage
      summary: Хранилище
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          description: Информация о хранилище
    patch:
      security:
        - bearerAuth: [ ]
      tags:
        - manage
      summary: Переименовать хранилище
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: ok
    delete:
      parameters:
        - in: path
          name: id
          description: id хранилища
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: [ ]
      tags:
        - manage
      summary: Удалить хранилище
      description: soft delete
      responses:
        200:
          description: ok
  /storages/{id}/files/folder:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - nav
      summary: Список файлов папки
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: query
          name: path
          required: true
          schema:
            type: string
            default: /
      responses:
        200:
          description: Список файлов по указанному пути
  /storages/{id}/files/{type}:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - nav
      summary: Фильтр по типам файлов
      description: |
        Сквозная фильтрация по типам файлов.
        
        Через Api яндекса доступны:  audio, backup, book, compressed, data, development, diskimage, document, encoded, executable, flash, font, image, settings, spreadsheet, text, unknown, video, web. 
        
        Из них поддеживаются только перечисленные в параметрах
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: type
          required: true
          description: Тип файла
          schema:
            type: string
            enum:
              - video
              - audio
              - document
              - image
              - text
      responses:
        200:
          description: Список файлов диска указанного типа
  /storages/{id}/files/:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - nav
      summary: Скачать файл
      description: Эндпоинт вернет файл в бинарном виде. На фронте его можно отобразить через blob
      parameters:
        - in: path
          name: id
          description: id диска
          required: true
          schema:
            type: integer
        - in: query
          name: path
          description: Путь к файлу в хранилище
          schema:
            type: string
          required: true
      responses:
        200:
          description: Бинарный файл
  /token/create:
    get:
      tags:
        - auth
      summary: Получить токен доступа
      description: |
        Создать нового пользователя и вернуть токен для его идентификации и аутентификации.
        
        При утере токена восстановить доступ к аккаунту невозможно.
      responses:
        200:
          description: Токен

components:
  parameters:
    id:
      name: id
      in: path
      required: true
      description: id хранилища
      schema:
        type: integer
  schemas:
    NewStorage:
      type: object
      properties:
        label:
          description: Пользовательское название для диска
          type: string
          default: Диск id
        driver:
          description: id типа драйвера
          type: integer
        credentials:
          type: object
          description: Доступы к хранилищу
  examples:
    yandex:
      summary: Яндекс Диск
      description: |
        Для добавления диска нужно передать OAuth токен. Его выдает Яндекс.
        
        Чтобы получить токен, перенаправить пользователя по адресу
        https://oauth.yandex.ru/authorize?response_type=token&client_id=4e2509198c704e87ab2a3e3a47be5e7e.
        Пользователь должен быть залогиненным в Яндекс и подтвердить доступ к своему диску.
      value:
        label: DS drive
        driver: 1
        credentials:
          token: AQAEA7qi7begAAfqC7jeGwAwxUpHhscXAXEEw
    ftp:
      summary: FTP
      description: |
        Подключениe ftp-хранилища. 
        
        Не реализовано. Только для примера, что в спецификации предусмотрено расширению функционала
      value:
        driver: 2
        credentials:
          username: admin
          password: 123456

  securitySchemes:
    bearerAuth:
      description: Токен пользователя, полученный через `/token/create`
      type: http
      scheme: bearer